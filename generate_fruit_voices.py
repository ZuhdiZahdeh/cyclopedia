import os
from elevenlabs import ElevenLabs

# 1. ุฅุนุฏุงุฏ ููุชุงุญ API ูู ElevenLabs
ELEVENLABS_API_KEY = "sk_f168d48dd858021f0f2271f3192d244867a49875a9c3894c"
client = ElevenLabs(api_key=ELEVENLABS_API_KEY)

# 2. ูุนุฑู ุงูุตูุช (Voice ID) ูุตูุช ุงููุชุงุฉ ูู ElevenLabs
VOICE_ID = "qi4PkV9c01kb869Vh7Su" # ุชู ุชุญุฏูุซู ุฅูู ูุนุฑู ุตูุช ุงููุชุงุฉ

# 3. ูุณุงุฑ ุญูุธ ูููุงุช ุงูุตูุช
OUTPUT_DIR = r"E:\cyclopedia\public\audio\ar\fruits"

# ุฅูุดุงุก ูุฌูุฏ ุงูุฅุฎุฑุงุฌ ุฅุฐุง ูู ููู ููุฌูุฏูุง
os.makedirs(OUTPUT_DIR, exist_ok=True)

# 4. ูุงุฆูุฉ ุงูููุงูู ุงููุฑุงุฏ ุชูููุฏ ุฃุตูุงุช ููุง (ููุณ ุงููุงุฆูุฉ ุงูุณุงุจูุฉ)
fruits_data = {
    "apple": "ุชูุงุญ",
    "banana": "ููุฒ",
    "orange": "ุจุฑุชูุงู",
    "strawberry": "ูุฑุงููุฉ",
    "grape": "ุนูุจ",
    "watermelon": "ุจุทูุฎ",
    "melon": "ุดูุงู",
    "mango": "ูุงูุฌู",
    "kiwi": "ูููู",
    "pineapple": "ุฃูุงูุงุณ",
    "cherry": "ูุฑุฒ",
    "peach": "ุฎูุฎ",
    "apricot": "ูุดูุด",
    "berry": "ุชูุช",
    "lemon": "ููููู",
    "date": "ุชูุฑ",
    "fig": "ุชูู",
    "pomegranate": "ุฑูุงู",
    "pear": "ููุซุฑู",
    "papaya": "ุจุงุจุงูุง",
    "avocado": "ุฃูููุงุฏู",
    "blackberry": "ุชูุช ุฃุณูุฏ",
    "blueberry": "ุชูุช ุฃุฒุฑู",
    "cantaloupe": "ุดูุงู ููุชุงููุจ",
    "coconut": "ุฌูุฒ ุงูููุฏ",
    "cranberry": "ุชูุช ุจุฑู",
    "dragon_fruit": "ูุงููุฉ ุงูุชููู",
    "durian": "ุฏูุฑูุงู",
    "grapefruit": "ุฌุฑูุจ ูุฑูุช",
    "guava": "ุฌูุงูุฉ",
    "honeydew_melon": "ุดูุงู ุนุณูู",
    "jackfruit": "ุฌุงู ูุฑูุช",
    "kumquat": "ููููุงุช",
    "lime": "ููู ุฃุฎุถุฑ",
    "lychee": "ููุชุดู",
    "mandarin": "ููุณูู",
    "nectarine": "ููุชุงุฑูู",
    "olive": "ุฒูุชูู",
    "passion_fruit": "ุจุงุดู ูุฑูุช",
    "plum": "ุจุฑููู",
    "pomelo": "ุจููููู",
    "quince": "ุณูุฑุฌู",
    "raspberry": "ุชูุช ุฃุญูุฑ",
    "star_fruit": "ูุงููุฉ ุงููุฌูุฉ",
    "tangerine": "ููุณูู"
}

print("ุจุฏุก ุชูููุฏ ุฃุตูุงุช ุงูููุงูู ุจุตูุช ุงููุชุงุฉ...")

# 5. ุญููุฉ ูุชูููุฏ ูุญูุธ ุงูุฃุตูุงุช
for fruit_en_name, fruit_ar_text in fruits_data.items():
    try:
        audio_stream = client.text_to_speech.convert(
            voice_id=VOICE_ID,
            text=fruit_ar_text,
            model_id="eleven_multilingual_v2"
        )

        # ุจูุงุก ุงุณู ุงูููู ููุณุงุฑู
        formatted_fruit_name = fruit_en_name.replace(" ", "_").lower()
        file_name = f"{formatted_fruit_name}_girl_ar.mp3" # ุชู ุชุบููุฑ _boy_ ุฅูู _girl_
        file_path = os.path.join(OUTPUT_DIR, file_name)

        # ุญูุธ ููู ุงูุตูุช
        with open(file_path, "wb") as f:
            for chunk in audio_stream:
                if chunk:
                    f.write(chunk)
        print(f"โ ุชู ุชูููุฏ ูุญูุธ ุงูุตูุช ูู '{fruit_ar_text}' ุจุตูุช ุงููุชุงุฉ ูู: {file_path}")
    except Exception as e:
        print(f"โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุฃู ุญูุธ ุงูุตูุช ูู '{fruit_ar_text}' ุจุตูุช ุงููุชุงุฉ: {e}")

print("\n๐ ุชู ุงูุงูุชูุงุก ูู ุชูููุฏ ุฌููุน ุงูุฃุตูุงุช ุงููุทููุจุฉ ุจุตูุช ุงููุชุงุฉ!")